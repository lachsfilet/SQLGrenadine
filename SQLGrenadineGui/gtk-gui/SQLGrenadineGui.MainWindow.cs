
// This file has been generated by the GUI designer. Do not modify.
namespace SQLGrenadineGui
{
	public partial class MainWindow
	{
		private global::Gtk.UIManager UIManager;
		private global::Gtk.Action FileAction;
		private global::Gtk.Action newAction;
		private global::Gtk.Action EditAction;
		private global::Gtk.Action DatabaseAction;
		private global::Gtk.Action HelpAction;
		private global::Gtk.Action PreferencesAction;
		private global::Gtk.Action quitAction;
		private global::Gtk.Action executeAction;
		private global::Gtk.Action NewConAction;
		private global::Gtk.Action connectAction1;
		private global::Gtk.Action newButtonQuery;
		private global::Gtk.Action closeAction;
		private global::Gtk.Action connectAction;
		private global::Gtk.Action MySqlAction;
		private global::Gtk.Action executeQuery;
		private global::Gtk.Action parseQuery;
		private global::Gtk.Action propertiesAction;
		private global::Gtk.Action Action;
		private global::Gtk.RadioAction Action1;
		private global::Gtk.Action openAction;
		private global::Gtk.Action saveAsAction;
		private global::Gtk.Action SaveAction;
		private global::Gtk.Action saveAction;
		private global::Gtk.Action loadButtonFile;
		private global::Gtk.Action saveButtonFile;
		private global::Gtk.VBox vboxMain;
		private global::Gtk.MenuBar menubarMain;
		private global::Gtk.HBox hboxToolbar;
		private global::Gtk.ComboBox comboboxConnections;
		private global::Gtk.Toolbar toolbarMain;
		private global::Gtk.HPaned hpanedMain;
		private global::Gtk.VBox vbox1;
		private global::Gtk.Toolbar toolbarDatabaseTree;
		private global::Gtk.ScrolledWindow GtkScrolledWindow;
		private global::Gtk.TreeView treeviewDatabase;
		private global::Gtk.Notebook notebookContent;
		private global::Gtk.Statusbar statusbarMain;
        
		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget SQLGrenadineGui.MainWindow
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
			this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("File"), null, null);
			this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
			w1.Add (this.FileAction, null);
			this.newAction = new global::Gtk.Action ("newAction", global::Mono.Unix.Catalog.GetString ("New Query"), null, "gtk-new");
			this.newAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("New");
			w1.Add (this.newAction, null);
			this.EditAction = new global::Gtk.Action ("EditAction", global::Mono.Unix.Catalog.GetString ("Edit"), null, null);
			this.EditAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Edit");
			w1.Add (this.EditAction, null);
			this.DatabaseAction = new global::Gtk.Action ("DatabaseAction", global::Mono.Unix.Catalog.GetString ("Database"), null, null);
			this.DatabaseAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Database");
			w1.Add (this.DatabaseAction, null);
			this.HelpAction = new global::Gtk.Action ("HelpAction", global::Mono.Unix.Catalog.GetString ("Help"), null, null);
			this.HelpAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Help");
			w1.Add (this.HelpAction, null);
			this.PreferencesAction = new global::Gtk.Action ("PreferencesAction", global::Mono.Unix.Catalog.GetString ("Preferences"), null, null);
			this.PreferencesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Preferences");
			w1.Add (this.PreferencesAction, null);
			this.quitAction = new global::Gtk.Action ("quitAction", global::Mono.Unix.Catalog.GetString ("Quit"), null, "gtk-quit");
			this.quitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Quit");
			w1.Add (this.quitAction, null);
			this.executeAction = new global::Gtk.Action ("executeAction", null, null, "gtk-execute");
			this.executeAction.ShortLabel = "";
			w1.Add (this.executeAction, null);
			this.NewConAction = new global::Gtk.Action ("NewConAction", global::Mono.Unix.Catalog.GetString ("New Con"), null, null);
			this.NewConAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("New Con");
			w1.Add (this.NewConAction, null);
			this.connectAction1 = new global::Gtk.Action ("connectAction1", global::Mono.Unix.Catalog.GetString ("New Connection"), global::Mono.Unix.Catalog.GetString ("Open a new database connection and add it to the tree."), "gtk-connect");
			this.connectAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("New Connection");
			w1.Add (this.connectAction1, null);
			this.newButtonQuery = new global::Gtk.Action ("newButtonQuery", global::Mono.Unix.Catalog.GetString ("New Query"), global::Mono.Unix.Catalog.GetString ("Open a new query tab."), "gtk-new");
			this.newButtonQuery.ShortLabel = global::Mono.Unix.Catalog.GetString ("New Query");
			w1.Add (this.newButtonQuery, null);
			this.closeAction = new global::Gtk.Action ("closeAction", global::Mono.Unix.Catalog.GetString ("Close"), null, "gtk-close");
			this.closeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Close");
			w1.Add (this.closeAction, null);
			this.connectAction = new global::Gtk.Action ("connectAction", global::Mono.Unix.Catalog.GetString ("Connect to Database"), null, "gtk-connect");
			this.connectAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Connect to Database");
			w1.Add (this.connectAction, null);
			this.MySqlAction = new global::Gtk.Action ("MySqlAction", global::Mono.Unix.Catalog.GetString ("MySql"), null, null);
			this.MySqlAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("MySql");
			w1.Add (this.MySqlAction, null);
			this.executeQuery = new global::Gtk.Action ("executeQuery", null, global::Mono.Unix.Catalog.GetString ("Execute SQL commands of current tab."), "gtk-execute");
			this.executeQuery.ShortLabel = "";
			w1.Add (this.executeQuery, null);
			this.parseQuery = new global::Gtk.Action ("parseQuery", null, null, "gtk-apply");
			this.parseQuery.ShortLabel = "";
			w1.Add (this.parseQuery, null);
			this.propertiesAction = new global::Gtk.Action ("propertiesAction", null, null, "gtk-properties");
			this.propertiesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Properties");
			w1.Add (this.propertiesAction, null);
			this.Action = new global::Gtk.Action ("Action", null, null, null);
			this.Action.ShortLabel = "";
			w1.Add (this.Action, null);
			this.Action1 = new global::Gtk.RadioAction ("Action1", null, null, null, 0);
			this.Action1.Group = new global::GLib.SList (global::System.IntPtr.Zero);
			this.Action1.ShortLabel = "";
			w1.Add (this.Action1, null);
			this.openAction = new global::Gtk.Action ("openAction", global::Mono.Unix.Catalog.GetString ("Open ..."), null, "gtk-open");
			this.openAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Open ...");
			w1.Add (this.openAction, null);
			this.saveAsAction = new global::Gtk.Action ("saveAsAction", global::Mono.Unix.Catalog.GetString ("Save As ..."), null, "gtk-save-as");
			this.saveAsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save As ...");
			w1.Add (this.saveAsAction, null);
			this.SaveAction = new global::Gtk.Action ("SaveAction", global::Mono.Unix.Catalog.GetString ("Save"), null, null);
			this.SaveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save");
			w1.Add (this.SaveAction, null);
			this.saveAction = new global::Gtk.Action ("saveAction", global::Mono.Unix.Catalog.GetString ("Save"), null, "gtk-save");
			this.saveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save");
			w1.Add (this.saveAction, null);
			this.loadButtonFile = new global::Gtk.Action ("loadButtonFile", null, null, "gtk-open");
			this.loadButtonFile.ShortLabel = "";
			w1.Add (this.loadButtonFile, null);
			this.saveButtonFile = new global::Gtk.Action ("saveButtonFile", null, null, "gtk-save");
			this.saveButtonFile.ShortLabel = "";
			w1.Add (this.saveButtonFile, null);
			this.UIManager.InsertActionGroup (w1, 0);
			this.AddAccelGroup (this.UIManager.AccelGroup);
			this.Name = "SQLGrenadineGui.MainWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("SQLGrenadine");
			this.WindowPosition = ((global::Gtk.WindowPosition)(1));
			// Container child SQLGrenadineGui.MainWindow.Gtk.Container+ContainerChild
			this.vboxMain = new global::Gtk.VBox ();
			this.vboxMain.Name = "vboxMain";
			this.vboxMain.Spacing = 6;
			// Container child vboxMain.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString ("<ui><menubar name='menubarMain'><menu name='FileAction' action='FileAction'><menuitem name='newAction' action='newAction'/><menuitem name='openAction' action='openAction'/><separator/><menuitem name='saveAction' action='saveAction'/><menuitem name='saveAsAction' action='saveAsAction'/><separator/><menuitem name='closeAction' action='closeAction'/><menuitem name='quitAction' action='quitAction'/></menu><menu name='EditAction' action='EditAction'/><menu name='DatabaseAction' action='DatabaseAction'><menuitem name='connectAction' action='connectAction'/></menu><menu name='PreferencesAction' action='PreferencesAction'/><menu name='HelpAction' action='HelpAction'/></menubar></ui>");
			this.menubarMain = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubarMain")));
			this.menubarMain.Name = "menubarMain";
			this.vboxMain.Add (this.menubarMain);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vboxMain [this.menubarMain]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vboxMain.Gtk.Box+BoxChild
			this.hboxToolbar = new global::Gtk.HBox ();
			this.hboxToolbar.Name = "hboxToolbar";
			this.hboxToolbar.Spacing = 6;
			// Container child hboxToolbar.Gtk.Box+BoxChild
			this.comboboxConnections = global::Gtk.ComboBox.NewText ();
			this.comboboxConnections.AppendText (global::Mono.Unix.Catalog.GetString ("Not connected"));
			this.comboboxConnections.Name = "comboboxConnections";
			this.comboboxConnections.Active = 0;
			this.hboxToolbar.Add (this.comboboxConnections);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hboxToolbar [this.comboboxConnections]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			// Container child hboxToolbar.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString ("<ui><toolbar name='toolbarMain'><toolitem name='newButtonQuery' action='newButtonQuery'/><toolitem name='loadButtonFile' action='loadButtonFile'/><toolitem name='saveButtonFile' action='saveButtonFile'/><separator/><toolitem name='executeQuery' action='executeQuery'/><toolitem name='parseQuery' action='parseQuery'/></toolbar></ui>");
			this.toolbarMain = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolbarMain")));
			this.toolbarMain.Events = ((global::Gdk.EventMask)(8992));
			this.toolbarMain.Name = "toolbarMain";
			this.toolbarMain.ShowArrow = false;
			this.hboxToolbar.Add (this.toolbarMain);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hboxToolbar [this.toolbarMain]));
			w4.Position = 1;
			this.vboxMain.Add (this.hboxToolbar);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vboxMain [this.hboxToolbar]));
			w5.Position = 1;
			w5.Expand = false;
			w5.Fill = false;
			// Container child vboxMain.Gtk.Box+BoxChild
			this.hpanedMain = new global::Gtk.HPaned ();
			this.hpanedMain.CanFocus = true;
			this.hpanedMain.Name = "hpanedMain";
			this.hpanedMain.Position = 179;
			// Container child hpanedMain.Gtk.Paned+PanedChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString ("<ui><toolbar name='toolbarDatabaseTree'><toolitem name='connectAction1' action='connectAction1'/><toolitem name='propertiesAction' action='propertiesAction'/></toolbar></ui>");
			this.toolbarDatabaseTree = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolbarDatabaseTree")));
			this.toolbarDatabaseTree.Events = ((global::Gdk.EventMask)(8992));
			this.toolbarDatabaseTree.Name = "toolbarDatabaseTree";
			this.toolbarDatabaseTree.ShowArrow = false;
			this.toolbarDatabaseTree.ToolbarStyle = ((global::Gtk.ToolbarStyle)(2));
			this.vbox1.Add (this.toolbarDatabaseTree);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.toolbarDatabaseTree]));
			w6.Position = 0;
			w6.Expand = false;
			w6.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this.treeviewDatabase = new global::Gtk.TreeView ();
			this.treeviewDatabase.CanFocus = true;
			this.treeviewDatabase.Name = "treeviewDatabase";
			this.GtkScrolledWindow.Add (this.treeviewDatabase);
			this.vbox1.Add (this.GtkScrolledWindow);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.GtkScrolledWindow]));
			w8.Position = 1;
			this.hpanedMain.Add (this.vbox1);
			global::Gtk.Paned.PanedChild w9 = ((global::Gtk.Paned.PanedChild)(this.hpanedMain [this.vbox1]));
			w9.Resize = false;
			// Container child hpanedMain.Gtk.Paned+PanedChild
			this.notebookContent = new global::Gtk.Notebook ();
			this.notebookContent.CanFocus = true;
			this.notebookContent.Name = "notebookContent";
			this.notebookContent.CurrentPage = -1;
			this.notebookContent.EnablePopup = true;
			this.notebookContent.ShowBorder = false;
			this.notebookContent.Scrollable = true;
			this.hpanedMain.Add (this.notebookContent);
			this.vboxMain.Add (this.hpanedMain);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.vboxMain [this.hpanedMain]));
			w11.Position = 2;
			// Container child vboxMain.Gtk.Box+BoxChild
			this.statusbarMain = new global::Gtk.Statusbar ();
			this.statusbarMain.Name = "statusbarMain";
			this.statusbarMain.Spacing = 6;
			this.vboxMain.Add (this.statusbarMain);
			global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.vboxMain [this.statusbarMain]));
			w12.Position = 3;
			w12.Expand = false;
			w12.Fill = false;
			this.Add (this.vboxMain);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 995;
			this.DefaultHeight = 598;
			this.Show ();
			this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
			this.KeyPressEvent += new global::Gtk.KeyPressEventHandler (this.OnKeyPressed);
			this.newAction.Activated += new global::System.EventHandler (this.OnNewQuery);
			this.quitAction.Activated += new global::System.EventHandler (this.OnQuit);
			this.connectAction1.Activated += new global::System.EventHandler (this.OnConnect);
			this.newButtonQuery.Activated += new global::System.EventHandler (this.OnNewQuery);
			this.closeAction.Activated += new global::System.EventHandler (this.OnClose);
			this.connectAction.Activated += new global::System.EventHandler (this.OnConnect);
			this.executeQuery.Activated += new global::System.EventHandler (this.OnExecuteQuery);
			this.comboboxConnections.Changed += new global::System.EventHandler (this.OnConnectionsChanged);
			this.notebookContent.SwitchPage += new global::Gtk.SwitchPageHandler (this.OnSwitchPage);
		}
	}
}
